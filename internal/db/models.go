// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Comment struct {
	ID              uuid.UUID    `json:"id"`
	CreatedAt       time.Time    `json:"created_at"`
	UpdatedAt       sql.NullTime `json:"updated_at"`
	OwnerID         uuid.UUID    `json:"owner_id"`
	ParentCommentID uuid.UUID    `json:"parent_comment_id"`
	TodoID          uuid.UUID    `json:"todo_id"`
	Content         string       `json:"content"`
}

type CommentLike struct {
	ID        uuid.UUID `json:"id"`
	CommentID uuid.UUID `json:"comment_id"`
	OwnerID   uuid.UUID `json:"owner_id"`
}

type RefreshToken struct {
	ID        uuid.UUID    `json:"id"`
	CreatedAt time.Time    `json:"created_at"`
	ExpiresAt sql.NullTime `json:"expires_at"`
	UserID    uuid.UUID    `json:"user_id"`
}

type Role struct {
	ID   int32  `json:"id"`
	Code string `json:"code"`
	Name string `json:"name"`
}

type Todo struct {
	ID         uuid.UUID    `json:"id"`
	Title      string       `json:"title"`
	Content    string       `json:"content"`
	Background string       `json:"background"`
	Duedate    time.Time    `json:"duedate"`
	CreatedAt  time.Time    `json:"created_at"`
	UpdatedAt  sql.NullTime `json:"updated_at"`
	Completed  bool         `json:"completed"`
	OwnerID    uuid.UUID    `json:"owner_id"`
}

type TodoLike struct {
	ID      uuid.UUID `json:"id"`
	OwnerID uuid.UUID `json:"owner_id"`
	TodoID  uuid.UUID `json:"todo_id"`
}

type UserAccount struct {
	UserID       uuid.UUID    `json:"user_id"`
	FirstName    string       `json:"first_name"`
	LastName     string       `json:"last_name"`
	Username     string       `json:"username"`
	Email        string       `json:"email"`
	IsOnline     bool         `json:"is_online"`
	LastLogin    sql.NullTime `json:"last_login"`
	PasswordHash string       `json:"password_hash"`
	CreatedAt    time.Time    `json:"created_at"`
	RoleCode     string       `json:"role_code"`
}
